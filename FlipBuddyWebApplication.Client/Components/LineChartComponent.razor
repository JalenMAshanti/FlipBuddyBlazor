@rendermode InteractiveServer

<div style="height:300px">

    <ApexChart TItem="MyData"
               Height="@("100%")"
               Options="options">

        <ApexPointSeries TItem="MyData"
                         Items="Data"
                         Name="Net Profit"
                         SeriesType="SeriesType.Bar"
                         XValue="e => e.Category"
                         YValue="e=> e.NetProfit" />
       

    </ApexChart>
</div>
@code {
    private List<MyData> Data { get; set; } = new();
    protected override void OnInitialized()
    {
        Data.Add(new MyData { Category = "Jan", NetProfit = 12, Revenue = 33 });
        Data.Add(new MyData { Category = "Feb", NetProfit = 43, Revenue = 42 });
        Data.Add(new MyData { Category = "Mar", NetProfit = 112, Revenue = 23 });
        Data.Add(new MyData { Category = "April", NetProfit = 99, Revenue = 55 });
        Data.Add(new MyData { Category = "May", NetProfit = 100, Revenue = 49 });
        Data.Add(new MyData { Category = "June", NetProfit = 112, Revenue = 23 });
        Data.Add(new MyData { Category = "July", NetProfit = 99, Revenue = 55 });
        Data.Add(new MyData { Category = "August", NetProfit = 100, Revenue = 49 });
    }

    public class MyData
    {
        public string Category { get; set; }
        public int NetProfit { get; set; }
        public int Revenue { get; set; }
    }

    private ApexChartOptions<MyData> options = new ApexChartOptions<MyData>()
    {
        PlotOptions = new PlotOptions
        {
            Bar = new PlotOptionsBar
            {
                BorderRadius = 5,   // Rounds the corners of the bars
                Horizontal = false,   // Vertical bars
                ColumnWidth = "50%"
               
            }
        },

        Grid = new Grid
        {
            Show = false,           // Show or hide grid lines
            BorderColor = "#e0e0e0", // Color of the grid lines
            StrokeDashArray = 5,    // Style of the grid lines (dashed lines)
            Position = GridPosition.Back
        },
        
        Colors = new List<string> { "#FFFFFF" },


         Xaxis = new XAxis
         {
             Labels = new XAxisLabels
             {
                 Style = new AxisLabelStyle
                 {
                     FontSize = "10px",  // Font size for X-axis labels
                     FontFamily = "Urbanist, sans-serif",  // Font family
                     Colors = new List<string> { "#FFFFFF" }, // Font color (can use multiple colors for different labels)
                     FontWeight = "Bold"
                 }
             }
         },
            Yaxis = new List<YAxis>
        {
            new YAxis
            {
                Labels = new YAxisLabels
                {
                    Style = new AxisLabelStyle
                    {
                        FontSize = "14px",  // Font size for Y-axis labels
                        FontFamily = "Urbanist, sans-serif",  // Font family
                        Colors = new List<string> { "#FFFFFF" },  // Font color
                        FontWeight = "Bold"
                    }
                }
            }
        },


    };
}